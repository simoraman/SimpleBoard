@{
    ViewBag.Title = "SimpleBoard";
}

<h2>@ViewBag.Title</h2>
<div id="container">
    <div id="board">
        <div id="ToDo" class="board-col" >
            <h3>ToDo</h3>
            <div data-bind="foreach: {data:tasks, afterRender:makeDraggable}">
                <!-- ko if: $data.Status.toUpperCase()==='ToDo'.toUpperCase() -->
                @Html.Partial("_Card")
                <!-- /ko -->
            </div>
        </div>
        <div id="Doing" class="board-col">
            <h3>Doing</h3>
            <div data-bind="foreach: {data:tasks, afterRender:makeDraggable}">
                <!-- ko if: $data.Status.toUpperCase()==='Doing'.toUpperCase() -->
                @Html.Partial("_Card")
                <!-- /ko -->
            </div>
        </div>
        <div id="Done" class="board-col">
            <h3>Done</h3>
            <div data-bind="foreach: {data:tasks, afterRender:makeDraggable}">
                 <!-- ko if: $data.Status.toUpperCase()==='done'.toUpperCase() -->
                @Html.Partial("_Card")
                <!-- /ko -->
            </div>
        </div>
    </div>
    
</div>

<div id="controls">
    <a href='#' id='new-button'>New</a>
    <div id="dialog-modal" style="display:none;" title="Task">
        <textarea rows="5" cols="30" data-bind="value: Description"></textarea>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/App/tasksViewModel.js" type="text/javascript"></script>
    <script type="text/javascript">
        
        function taskViewModel() {
            var self = this;
            self.Description = ko.observable("");
            self.Status = "ToDo";

            self.create = function (item) {
                var postData = ko.mapping.toJSON(item)
                self.url = "http://localhost:11188/api";
                $.ajax({
                    url: self.url + '/tasks/',
                    contentType: 'application/json',
                    type: 'POST',
                    data: postData,
                    error: function (request, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            }
        };

        var viewModel;
        var taskVM;
        $(function () {
            viewModel = new tasksViewModel();
            ko.applyBindings(viewModel, $('#board').get(0));

            taskVM = new taskViewModel();
            ko.applyBindings(taskVM, $('#controls').get(0));

            viewModel.load();

            $(".board-col").droppable({
                hoverClass: "column-state-hover",
                drop: function (event, ui) {
                    ui.draggable.find('input').val(this.id).change();
                    ui.draggable.submit();
                }
            });


            $('#new-button').click(function () {
                $('#dialog-modal').dialog({
                    modal: true,
                    buttons: {
                        Cancel: function () {
                            $(this).dialog("close");
                        },
                        Create: function () {
                            $(this).dialog("close");
                            taskVM.create(taskVM);
                        }
                    }
                });
            });
        });

        function makeDraggable() {
            $('.item').draggable({ revert: "invalid" });
        }

        
    </script>
}