@{
    ViewBag.Title = "SimpleBoard";
}

<h2>@ViewBag.Title</h2>
<div id="container">
    <div id="board">
        <div id="ToDo" class="board-col" >
            <h3>ToDo</h3>
            <div data-bind="foreach: {data:tasks, afterRender:makeDraggable}">
                <!-- ko if: $data.Status.toUpperCase()==='ToDo'.toUpperCase() -->
                @Html.Partial("_Card")
                <!-- /ko -->
            </div>
        </div>
        <div id="Doing" class="board-col">
            <h3>Doing</h3>
            <div data-bind="foreach: {data:tasks, afterRender:makeDraggable}">
                <!-- ko if: $data.Status.toUpperCase()==='Doing'.toUpperCase() -->
                @Html.Partial("_Card")
                <!-- /ko -->
            </div>
        </div>
        <div id="Done" class="board-col">
            <h3>Done</h3>
            <div data-bind="foreach: {data:tasks, afterRender:makeDraggable}">
                 <!-- ko if: $data.Status.toUpperCase()==='done'.toUpperCase() -->
                @Html.Partial("_Card")
                <!-- /ko -->
            </div>
        </div>
    </div>
    
</div>

<div id="controls">
    <a href='#' id='new-button' data-bind="click: function(data, event) {newDialog();}">New</a>
    <div id="dialog-modal" style="display:none;" title="Task">
        <textarea rows="5" cols="30" data-bind="value: selectedTask().Description"></textarea>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/App/tasksViewModel.js" type="text/javascript"></script>
    <script type="text/javascript">
        var backendUrl = "http://localhost:11188/api";
        var viewModel;

        $(function () {
            viewModel = new tasksViewModel();
            ko.applyBindings(viewModel);
            viewModel.load();

            $(".board-col").droppable({
                hoverClass: "column-state-hover",
                drop: function (event, ui) {
                    ui.draggable.find('input').val(this.id).change();
                    ui.draggable.submit();
                }
            });

        });

        function makeDraggable() {
            $('.item').draggable({ revert: "invalid" });
        }

        function editDialog() {
            $('#dialog-modal').dialog({
                modal: true,
                buttons: {
                    Cancel: function () {
                        $(this).dialog("close");
                    },
                    Update: function () {
                        $(this).dialog("close");
                        viewModel.updateItem(viewModel.selectedTask());
                    }
                }
            });
        }

        function newDialog() {
            viewModel.selectedTask({Description:"", Status:"ToDo"});
            $('#dialog-modal').dialog({
                modal: true,
                buttons: {
                    Cancel: function () {
                        $(this).dialog("close");
                    },
                    Create: function () {
                        $(this).dialog("close");
                        viewModel.create(viewModel.selectedTask());
                    }
                }
            });
        }

    </script>
}